# The fitness function interface

from abc import ABCMeta, abstractmethod


class Fitness(metaclass=ABCMeta):
    """
    The fitness object. Interface between search algorithm and the users objective function.
    """
    @abstractmethod
    def evaluate(self, params, env_config, **kwargs):
        """
        This function needs to be implemented to represent the objective function.

        Args:
            params(np.array): A flat numpy array representing a solution
                generated by search algorithm.
            env_config: configuration of the env

        Returns:
            reward(float): A scalar value representing the evaluation of the objective function.
                Search algorithm is going to maximize this value.
        """
        raise NotImplementedError

    @abstractmethod
    def get_initial_solution(self):
        """
        This is usually a random solution. Its used as the starting point for training.

        Returns:
            sample(np.array)
        """
        raise NotImplementedError
